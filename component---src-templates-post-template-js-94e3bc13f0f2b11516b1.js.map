{"version":3,"sources":["webpack:///./src/components/Post/Author/Author.js","webpack:///./src/components/Post/Comments/Comments.js","webpack:///./src/components/Post/Content/Content.js","webpack:///./src/components/Post/Meta/Meta.js","webpack:///./src/components/Post/Tags/Tags.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/post-template.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["PureAuthor","_ref","author","data","site","siteMetadata","react_default","a","createElement","className","styles","src","withPrefix","photo","alt","name","bio","Author","gatsby_browser_entry","query","render","Author_PureAuthor","_3509649085","PureComments","postTitle","postSlug","_data$site$siteMetada","url","disqusShortname","main_default","shortname","identifier","title","Comments","props","Comments_PureComments","Object","assign","_1989642023","Content","body","dangerouslySetInnerHTML","__html","Meta","date","moment","format","Tags","tags","tagSlugs","map","slug","i","key","to","Post","post","_post$frontmatter","frontmatter","html","fields","Post_Content_Content","Post_Meta_Meta","Post_Tags_Tags","Post_Author_Author","Post_Comments_Comments","__webpack_require__","d","__webpack_exports__","PostTemplate","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","postDescription","description","metaDescription","Layout","components_Post_Post","children","layout","Helmet_default","defaultTitle","lang","content","components_Layout_Layout","module","exports","defineProperty","value","_extends","target","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","href"],"mappings":"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","file":"component---src-templates-post-template-js-94e3bc13f0f2b11516b1.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { graphql, StaticQuery, withPrefix } from 'gatsby';\n\nimport styles from './Author.module.scss';\n\nexport const PureAuthor = ({ data }: Object) => {\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <div className={styles['author']}>\n      <p className={styles['author__bio']}>\n        <span className={styles['author__photo']}>\n          <img  \n            src={withPrefix(author.photo)}\n            alt={author.name}\n          />\n        </span>\n        <span>\n          <strong>{author.name}</strong>\n          <br/>\n          <span>{author.bio}</span>\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport const Author = () => (\n  <StaticQuery\n    query={graphql`\n      query AuthorQuery {\n        site {\n          siteMetadata {\n            author {\n              name\n              bio\n              photo\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => <PureAuthor data={data} />}\n  />\n);\n\nexport default Author;\n","import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport ReactDisqusComments from 'react-disqus-comments';\n\nexport const PureComments = ({ data, postTitle, postSlug }) => {\n  const {\n    url,\n    disqusShortname,\n  } = data.site.siteMetadata;\n\n  if (!disqusShortname) {\n    return null;\n  }\n\n  return (\n    <ReactDisqusComments\n      shortname={disqusShortname}\n      identifier={postTitle}\n      title={postTitle}\n      url={url + postSlug}\n    />\n  );\n};\n\nexport const Comments = (props) => (\n  <StaticQuery\n    query={graphql`\n      query CommentsQuery {\n        site {\n          siteMetadata {\n            disqusShortname\n            url\n          }\n        }\n      }\n    `}\n    render={(data) => <PureComments {...props} data={data}/>}\n  />\n);\n\nexport default Comments;\n","import React from 'react';\nimport styles from './Content.module.scss';\n\nconst Content = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\nconst Meta = ({ date }) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {moment(date).format('D MMM YYYY')}</p>\n  </div>\n);\n\nexport default Meta;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './Tags.module.scss';\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs.map((slug, i) => (\n        <li className={styles['tags__list-item']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__list-item-link']}>\n            # {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Author from './Author';\nimport Comments from './Comments';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport styles from './Post.module.scss';\n\nconst Post = ({ data, post }) => {\n  const {\n    tags,\n    title,\n    date\n  } = post.frontmatter;\n\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        <Tags tags={tags} tagSlugs={tagSlugs} />\n        <Author />\n      </div>\n\n      <div className={styles['post__comments']}>\n        <Comments postSlug={post.fields.slug} postTitle={post.frontmatter.title} data={data}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst PostTemplate = ({ data }) => {\n  const {\n    title: siteTitle,\n    subtitle: siteSubtitle\n  } = data.site.siteMetadata;\n\n  const {\n    title: postTitle,\n    description: postDescription\n  } = data.markdownRemark.frontmatter;\n\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\n      <Post post={data.markdownRemark} data={data}/>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n          contacts {\n            twitter\n          }\n        }\n        disqusShortname\n        subtitle\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport styles from './Layout.module.scss';\n\nconst Layout = ({ children }) => (\n  <div className={styles.layout}>\n    <Helmet defaultTitle=\"Kingso's blog\">\n      <html lang=\"en\" />\n      <meta name=\"google-site-verification\" content=\"mbgLz8ZMqCut4Jt1gFK1_ie6CSHvAN39Mijkn1EpPGc\" />\n    </Helmet>\n    {children}\n  </div>\n);\n\nexport default Layout;\n","export { default } from './Layout';\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}