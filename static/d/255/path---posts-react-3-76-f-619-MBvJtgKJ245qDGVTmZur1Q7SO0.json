{"data":{"site":{"siteMetadata":{"author":{"name":"Kingso","contacts":{"twitter":"#"}},"disqusShortname":"kingsoblog","subtitle":"Kingso's blog","title":"Kingso's blog","url":"https://kingso.netlify.com"}},"markdownRemark":{"id":"d60f446c-ac38-5a44-87c4-361e0b7c996f","html":"<br>\n<blockquote>\n<p>사전에 node가 설치되어야 합니다.\n자신의 OS에 맞게 node를 설치해주세요.</p>\n</blockquote>\n<br>\n<p><strong>Webpack 공식 문서 - <a href=\"https://webpack.js.org/concepts/\">링크</a></strong></p>\n<br>\n<h2 id=\"웹팩-webpack-설치하기\"><a href=\"#%EC%9B%B9%ED%8C%A9-webpack-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"웹팩 webpack 설치하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩 (Webpack) 설치하기</h2>\n<ol>\n<li>터미널을 열고, 자신의 프로젝트 경로로 이동하여 “npm init” 입력합니다.</li>\n</ol>\n<br>\n<ol start=\"2\">\n<li>react와 react-dom을 설치합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i react react-dom</code></pre></div>\n<br>\n<ol start=\"3\">\n<li>webpack과 webpack-cli를 추가로 설치합니다.\n( -D 는 개발용으로만 webpack을 사용할 것이라는 뜻입니다. 그래서 설치 후에, package.json 파일에서 “devDependencies”: 에 추가됩니다. )</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D webpack webpack-cli</code></pre></div>\n<br>\n<ol start=\"4\">\n<li>index.html 파일에서 webpack으로 출력할 파일을 추가해줍니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./dist/app.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n...</code></pre></div>\n<br>\n<ol start=\"5\">\n<li>Counter.jsx 파일 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> React <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>React를 사용하기 위해서 2번에서 설치한 라이브러리를 위와 같이 선언해서 작성해줘야합니다.</p>\n</li>\n<li>\n<p>하단에 export 해야 다른 파일에서 Counter.jsx 파일을 사용할 수 있습니다.</p>\n</li>\n</ul>\n<br>\n<ol start=\"6\">\n<li>client.jsx 파일 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> React <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ReactDom <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Counter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDom<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Counter <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>5번의 Counter 파일을 위와 같이 불러와, 렌더링 해줄 수 있습니다.</li>\n</ul>\n<br>\n<ol start=\"7\">\n<li>webpack.config.js 파일 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//실서비스: process.env.NODE_ENV = 'production';</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'counter-settings'</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//실서비스: production</span>\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'eval'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//실서비스: hidden-source-map</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//입력</span>\n    app<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./client'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//출력</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'app.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>resolve는 확장자를 적어놓게 되면, 파일이름 뒤의 확장자를 webpack이 자동으로 찾아서 실행한다.</p>\n</li>\n<li>\n<p>path는 자신의 프로젝트 경로의 폴더에서 원하는 파일로 설정할 수 있다.</p>\n</li>\n</ul>\n<br>\n<ol start=\"8\">\n<li>\n<p>터미널에서 “webpack” 명령어를 실행하면, command not found가 뜰 것입니다. 그것을 해결하는 방법에는 여러 가지가 있지만, 2가지 방법을 알아보겠습니다.</p>\n</li>\n<li>\n<p>package.json 파일에서 “scripts”: { “dev”: webpack } 으로 작성하여, 터미널에서 “npm run dev” 실행</p>\n</li>\n</ol>\n<br>\n<ul>\n<li>“npx webpack” 으로 실행</li>\n</ul>\n<br>\n<h4 id=\"error-가-나타납니다\"><a href=\"#error-%EA%B0%80-%EB%82%98%ED%83%80%EB%82%A9%EB%8B%88%EB%8B%A4\" aria-label=\"error 가 나타납니다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error!!!! 가 나타납니다.</h4>\n<h4 id=\"--error가-난-이유는-clientjsx-파일의-counter--태그인-jsx-때문입니다-이것을-사용하기-위해서-바벨babel-설치가-필요합니다-다음으로-가봅시다\"><a href=\"#--error%EA%B0%80-%EB%82%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94-clientjsx-%ED%8C%8C%EC%9D%BC%EC%9D%98-counter--%ED%83%9C%EA%B7%B8%EC%9D%B8-jsx-%EB%95%8C%EB%AC%B8%EC%9E%85%EB%8B%88%EB%8B%A4-%EC%9D%B4%EA%B2%83%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C-%EB%B0%94%EB%B2%A8babel-%EC%84%A4%EC%B9%98%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%A9%EB%8B%88%EB%8B%A4-%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EA%B0%80%EB%B4%85%EC%8B%9C%EB%8B%A4\" aria-label=\"  error가 난 이유는 clientjsx 파일의 counter  태그인 jsx 때문입니다 이것을 사용하기 위해서 바벨babel 설치가 필요합니다 다음으로 가봅시다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Error가 난 이유는 client.jsx 파일의 <Counter /> 태그인 JSX 때문입니다. 이것을 사용하기 위해서 바벨(babel) 설치가 필요합니다. 다음으로 가봅시다.</h4>\n<br>\n<h2 id=\"바벨babel-설치하기\"><a href=\"#%EB%B0%94%EB%B2%A8babel-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"바벨babel 설치하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바벨(Babel) 설치하기</h2>\n<p>웹팩 설치할 때와 비슷하게, 터미널을 열어 설치해줍니다.</p>\n<ol>\n<li>babel 관련 라이브러리를 설치해줍니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D @babel/core @babel/preset-env @babel/preset-react babel-loader</code></pre></div>\n<ul>\n<li>\n<p>@babel/core : 기본적 babel core 기능</p>\n</li>\n<li>\n<p>@babel/preset-env : 여러분의 브라우저 버전에 맞게 자동으로 최신문법을 옛날문법으로 호환되게끔 적용시켜주는 기능</p>\n</li>\n<li>\n<p>@babel/preset-react : JSX 지원 기능</p>\n</li>\n<li>\n<p>babel-loader : babel과 webpack 연결해주는 기능</p>\n</li>\n</ul>\n<br>\n<ol start=\"2\">\n<li>webpack.config.js 파일에 entry와 output 사이에 내용을 추가해줍니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module: {\n  rules: [{\n    test: /\\.jsx?/,\n    loader: &#39;babel-loader&#39;,\n    options: {\n      presets: [&#39;@babel/preset-env&#39;,&#39;@babel/preset-react&#39;]\n    },\n  }],\n},</code></pre></div>\n<p>entry와 output 사이에 작성하는 이유는 entry에 있는 파일을 읽고, 거기에 모듈을 적용한 후, output에 뺀다. 이런 흐름 구조상 보이게 하기 위함입니다.</p>\n<br>\n<ol start=\"3\">\n<li>npx webpack 실행해줍니다.</li>\n</ol>\n<p>에러메시지가 뜹니다. 그 에러메세지를 해석해보면, Counter.jsx 파일의 state = { } 를 사용하기 위해선, @babel/plugin-proposal-class-properties 을 추가로 설치하라고 합니다.</p>\n<ul>\n<li>npm i - D @babel/plugin-proposal-class-properties</li>\n</ul>\n<p>추가로 설치한 후, 위의 2번의 options에 plugins로 내용을 추가합니다.</p>\n<ul>\n<li>options: {\npresets: [‘@babel/preset-env’,‘@babel/preset-react’],\nplugins: [‘@babel/plugin-proposal-class-properties’],\n},</li>\n</ul>\n<br>\n<ol start=\"4\">\n<li>마지막으로 “npx webpack”을 실행하게 되면 Error 없이 빌드 된 것을 확인할 수 있습니다.</li>\n</ol>\n<br>\n<p><strong>참고 - <a href=\"https://www.youtube.com/watch?v=V3QsSrldHqI&#x26;list=PLcqDmjxt30RtqbStQqk-eYMK8N-1SYIFn\">ZeroCho님의 React 강좌</a></strong></p>","fields":{"slug":"/posts/React3/","tagSlugs":["/tag/frontend/","/tag/react/","/tag/webpack/","/tag/babel/"]},"frontmatter":{"date":"2019-07-24T14:00:00.169Z","description":"웹팩(WebPack) / 바벨(Babel) 설치하기","tags":["Frontend","React","webpack","babel"],"title":"React - 03"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/React3/"}}