{"data":{"site":{"siteMetadata":{"author":{"name":"Kingso","contacts":{"twitter":"#"}},"disqusShortname":"kingsoblog","subtitle":"Kingso's blog","title":"Kingso's blog","url":"https://kingso.netlify.com"}},"markdownRemark":{"id":"24acb6c5-0285-56ec-ba6b-926aa3cb3e92","html":"<br>\n<h2 id=\"2019-09-09-til\"><a href=\"#2019-09-09-til\" aria-label=\"2019 09 09 til permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2019-09-09 TIL</h2>\n<br>\n<h2 id=\"snippet-스니펫-기능\"><a href=\"#snippet-%EC%8A%A4%EB%8B%88%ED%8E%AB-%EA%B8%B0%EB%8A%A5\" aria-label=\"snippet 스니펫 기능 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Snippet (스니펫) 기능</h2>\n<p>에디터의 스니펫 기능을 사용하면 컴포넌트를 자동 생성할 수 있어 편리합니다.</p>\n<p>VS Code의 generate-react-component를 사용하는 것입니다.</p>\n<p>파일 탐색기에서 마우스 오른쪽 버튼 클릭 Generate new component 메뉴 선택했을 때, 리액트 컴포넌트를 위한 디렉터리와 파일들을 자동으로, 원하는 설정으로 만들어 줍니다.</p>\n<p>먼저, generate-react-component 를 설치하고 에디터를 재시작하세요.</p>\n<p>기본 리액트 컴포넌트 템플릿은 Sass를 사용하지 않고 .css 파일을 활용한 CSS 모듈을 사용합니다. 따라서 이 템플릿을 커스터마이징해야 합니다.</p>\n<p>다음 명령어로 템플릿을 내려받으세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git clone https://github.com/vlpt-playground/react-sass-component-template.git\n$ cd react-sass-component-template\n$ pwd</code></pre></div>\n<p>pwd 명령어를 입력하면 현재 경로의 절대 경로가 나타날 것입니다.\n이 경로를 복사하여 VS Code의 환경설정에 넣어야 합니다.</p>\n<p>설정 창을 열고, “generate-react-component.componentTemplatePath” 값을 템플릿이 위치한 절대 경로로 설정하세요.</p>\n<p>이제 템플릿을 사용한 컴포넌트를 자동으로 만들 수 있습니다. 에디터의 탐색기 부분에서 common 디렉터리를 마우스 오른쪽 버튼으로 누른 후 Generate new component 메뉴를 선택하세요.</p>\n<br>\n<h2 id=\"글로벌-스타일\"><a href=\"#%EA%B8%80%EB%A1%9C%EB%B2%8C-%EC%8A%A4%ED%83%80%EC%9D%BC\" aria-label=\"글로벌 스타일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글로벌 스타일</h2>\n<p>base.scss</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* body, 타이포그래피 등 기본 스타일 설정 */</span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\">url(\"//fonts.googleapis.com/earlyaccess/notosanskr.css\")</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//cdn.jsdelivr.net/gh/velopert/font-d2coding@1.2.1/d2coding.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Noto Sans KR\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-webkit-font-smoothing</span><span class=\"token punctuation\">:</span> antialiased<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">-moz-osx-font-smoothing</span><span class=\"token punctuation\">:</span> grayscale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">// box-sizing 일괄 설정\n*</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">// 링크 스타일 밑줄 및 색상 무효화\na</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>\n<p>포스트 제목, 내용 등에 주로 사용할 Noto Sans KR</p>\n</li>\n<li>\n<p>마트다운 에디터를 만들 때 코드 작성에 사용할 D2 Coding</p>\n</li>\n</ul>\n<p>box-sizing 값을 border-box로 설정하여 크기를 쉽게 지정할 수 있게 했으며, 링크는 자동으로 생성되는 밑줄과 파란색 색상을 비활성화했습니다.</p>\n<br>\n<h2 id=\"스타일-유틸-설정\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%9C%A0%ED%8B%B8-%EC%84%A4%EC%A0%95\" aria-label=\"스타일 유틸 설정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일 유틸 설정</h2>\n<ul>\n<li>\n<p>open-color : 색상 쉽게 선택할 수 있음</p>\n<ul>\n<li>색상 팔레트 : <a href=\"https://yeun.github.io/open-color/\">https://yeun.github.io/open-color/</a></li>\n</ul>\n</li>\n<li>\n<p>include-media : 반응형 디자인 쉽게 적용할 수 있음</p>\n</li>\n<li>\n<p>material-shadow 믹스인 : 그림자를 간편하게 설정할 수 있음</p>\n</li>\n</ul>\n<br>\n<h3 id=\"css-module-사용-시-주의할-점\"><a href=\"#css-module-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90\" aria-label=\"css module 사용 시 주의할 점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Module 사용 시 주의할 점</h3>\n<p>CSS Module을 사용하여 새로운 className을 만든다면 스타일 코드를 작성한 수 웹 브라우저에서 새로고침을 직접해야 반영됩니다.</p>\n<p>원래 CSS를 변경할 때는 웹 브라우저에서 새로고침하지 않아도 되는데, 새로운 className을 만들 때는 이 기능이 제대로 적용되지 않습니다.</p>\n<br>\n<br>\n<h3 id=\"속성-강제-적용-important-선언\"><a href=\"#%EC%86%8D%EC%84%B1-%EA%B0%95%EC%A0%9C-%EC%A0%81%EC%9A%A9-important-%EC%84%A0%EC%96%B8\" aria-label=\"속성 강제 적용 important 선언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>속성 강제 적용 !important 선언</h3>\n<p>!important는 위의 모든 순서를 무시하고, !important을 선언한 속성에 가장 먼저 우선 순위를 부여합니다.</p>\n<p>같은 요소에 !important를 한 번 이상 선언하면, 원래의 순서로 되돌아 갑니다.</p>\n<p>주의할 점은 !important는 전체 스타일이 아닌 개별 속성에 적용하며 IE6 이전 버전에서 인식되지 않을 수 있습니다.</p>\n<p>꼭 필요한 경우가 아니라면 되도록 사용하지 않는 게 좋습니다.</p>\n<p>!important는 스타일의 자연스런 흐름들 방해하고 !important를 사용하지 않는다는 것은 css를 제대로 이해하고 있다는 의미입니다.</p>\n<p><code class=\"language-text\">선택자 { 속성:속성값!important; }</code></p>\n<br>\n<br>\n<h2 id=\"리덕스-초기화-파일\"><a href=\"#%EB%A6%AC%EB%8D%95%EC%8A%A4-%EC%B4%88%EA%B8%B0%ED%99%94-%ED%8C%8C%EC%9D%BC\" aria-label=\"리덕스 초기화 파일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리덕스 초기화 파일</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAction<span class=\"token punctuation\">,</span> handleActions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-actions'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Map <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'immutable'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> pender <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-pender'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// action types</span>\n\n<span class=\"token comment\">// action creators</span>\n\n<span class=\"token comment\">// initial state</span>\n<span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token function\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// reducer</span>\n<span class=\"token comment\">//export default handleAction({}, initialState);</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">handleActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>리덕스 초기화 파일이다…</p>\n<p>오늘의 교훈은 “오타를 조심하자” 입니다..</p>\n<p>이틀간 무엇이 잘못되었는지 계속 console의 오류를 보고 구글링을 하고 버전도 다운그레이드 해보고 여러 번 시도를 했지만…</p>\n<p>문제는 handleAction이 아닌 handleActions…\n에스 !!! 에스!!!!!!! 에스 !!!!!!!!!!</p>\n<p>오타 체크도 했지만 왜 내 눈에 안보였는가…</p>\n<p>조심하자!!!</p>\n<br>\n<br>\n<h2 id=\"editorpanecontainer-컴포넌트-생성-후-editorpane-수정\"><a href=\"#editorpanecontainer-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%83%9D%EC%84%B1-%ED%9B%84-editorpane-%EC%88%98%EC%A0%95\" aria-label=\"editorpanecontainer 컴포넌트 생성 후 editorpane 수정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EditorPaneContainer 컴포넌트 생성 후, EditorPane 수정</h2>\n<p>제목과 태그는 input에 onChange 이벤트를 설정하여 값을 줄 수 있지만, CodeMirror는 initializeEditor 함수가 호출될 때 이벤트를 직접 등록해야 합니다.</p>\n<p>또 props로 받은 markdown 값을 CodeMirror 인스턴스에 반영해야 하기 때문에, componentDidUpdate 부분에서 markdown 값을 바꾸면 setValue를 사용하여 내용을 변경해 주어야 합니다.\n이 과정에서 cursor 위치가 초기화될 수 있기 때문에 setCursor를 사용하여 cursor 값을 유지해야 합니다.</p>\n<br>\n<br>\n<h3 id=\"query-string-라이브러리\"><a href=\"#query-string-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"query string 라이브러리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>query-string 라이브러리</h3>\n<p>이 라이브러리의 v6 이상은 구현 웹 브라우저에서 호환되지 않기 때문에 설치할 때는 뒤에 @5를 붙여 v5를 설치하세요.</p>\n<p><code class=\"language-text\">$ yarn add query-string@5</code></p>\n<br>\n<h3 id=\"remove-markdown-라이브러리\"><a href=\"#remove-markdown-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"remove markdown 라이브러리 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>remove-markdown 라이브러리</h3>\n<p>마크다운에서 사용하는 #, **, ```, > 등 특수 문자가 고스란히 보이는 문제점이 있을 때, 숨기게 할 수 있는 라이브러리</p>\n<br>\n<h3 id=\"모달modal\"><a href=\"#%EB%AA%A8%EB%8B%ACmodal\" aria-label=\"모달modal permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모달(Modal)</h3>\n<p>기존 페이지를 가리면서 뜨는 박스를 모달이라고 합니다.</p>\n<p>먼저 ModalWrapper 컴포넌트를 만들어 포스트 삭제 모달을 구현하겠습니다. 이 컴포넌트는 state가 있는 클래스형 컴포넌트로 전체 화면을 불투명한 회색 배경으로 바꾸고, 그 위에 흰색 박스를 보여 줍니다. 이 과정을 모달의 가시성 상태와 전환 효과 상태를 관리해 보겠습니다.</p>\n<p>또 ModalWrapper 컴포넌트는 나중에 비밀번호 로그인을 구현할 때 로그인 모달을 만드는 과정에서 재사용하기도 합니다.</p>\n<br>\n<h5 id=\"모달-전환-효과-구현\"><a href=\"#%EB%AA%A8%EB%8B%AC-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-%EA%B5%AC%ED%98%84\" aria-label=\"모달 전환 효과 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모달 전환 효과 구현</h5>\n<p>CSS의 @keyframes를 사용하여 구현합니다.\n@keyframes을 사용하여 전환 효과의 시작 부분, 마지막 부분의 스타일을 지정해 주면 스타일이 서서히 변화하면서 애니메이션 효과가 구현됩니다.</p>\n<p>네 가지 종류의 @keyframes</p>\n<ul>\n<li>fadeIn : 투명도가 0% -> 100%</li>\n<li>fadeout: 투명도가 100% -> 0%</li>\n<li>slideUp: 아래에서 위로 올라오는 효과</li>\n<li>slideDown: 위에서 아래로 내려가는 효과</li>\n</ul>","fields":{"slug":"/posts/20190909-TIL/","tagSlugs":["/tag/react/","/tag/redux/","/tag/component/","/tag/global-styles/"]},"frontmatter":{"date":"2019-09-09T14:00:00.169Z","description":"Snippet 기능 / globalStyles / 스타일 유틸","tags":["React","Redux","Component","globalStyles"],"title":"[20190909-TIL]"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/20190909-TIL/"}}