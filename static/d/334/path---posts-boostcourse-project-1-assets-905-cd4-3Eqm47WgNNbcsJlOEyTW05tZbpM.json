{"data":{"site":{"siteMetadata":{"author":{"name":"Kingso","contacts":{"twitter":"#"}},"disqusShortname":"kingsoblog","subtitle":"Kingso's blog","title":"Kingso's blog","url":"https://kingso.netlify.com"}},"markdownRemark":{"id":"0e02a6c8-a876-5954-ada3-4dca3018c5fd","html":"<h1 id=\"asset\"><a href=\"#asset\" aria-label=\"asset permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Asset</h1>\n<h2 id=\"에셋-카탈로그-asset-catalog\"><a href=\"#%EC%97%90%EC%85%8B-%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8-asset-catalog\" aria-label=\"에셋 카탈로그 asset catalog permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에셋 카탈로그 (Asset Catalog)</h2>\n<p>Xcode에서 프로젝트를 처음 생성했을 때 자동으로 <strong>Assets.xcassets</strong> 이라는 폴더가 생성되는데, 이 폴더에서 애플리케이션에 사용될 다양한 에셋을 관리하며,이를 에셋 카탈로그라고 합니다.\n에셋 카탈로그는 에셋과 다양한 디바이스의 속성에 대한 파일의 연결(mapping) 통해서 애플리케이션 리소스에 쉽게 접근할 수 있도록 도와줍니다. (리소스는 애플리케이션이 실행 중일 때 사용하는 이미지와 음악 파일 등을 말합니다.) 여기서 말하는 속성은 디바이스의 특징, 사이즈 클래스, 주문형 리소스. 특정 타입의 정보를 포함하고 있습니다.\n에셋 카랄로그에 관한 더 자세한 정보는 <a href=\"https://help.apple.com/xcode/mac/current/#/dev10510b1f7\">How To Create Asset Catalog</a></p>\n<h3 id=\"에셋-카탈로그-구성\"><a href=\"#%EC%97%90%EC%85%8B-%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8-%EA%B5%AC%EC%84%B1\" aria-label=\"에셋 카탈로그 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에셋 카탈로그 구성</h3>\n<p>에셋 카탈로그가 어떻게 구성 되어 있으며, 각 요소는 어떤 역할을 하는지 이미지와 함께 살펴봅시다.</p>\n<br>\n<p><img src=\"/media/boot_asset_1.jpg\" alt=\"boot_asset_1.jpg\">  </p>\n<br>\n<p>- Groups : 그룹은 한 개 이상의 또 다른 그룹이나 에셋을 가질 수 있습니다.</p>\n<p>- Assets : 에셋은 한 가지 타입의 관련된 속성과 파일들의 집합을 나타냅니다.</p>\n<p>- 에셋 이름(Asset name) : 에셋에 접근하기 위해 개발자가 정의한 문자열입니다.</p>\n<p>- 에셋 파일(Asset files) : 선택한 에셋의 데이터 파일 또는 리소스 입니다. (사이즈별로 1x,2x,3x - 1x의 크기가 30x30이였다면, 2x의 크기는 60x60, 3x의 크기는 90x90 —> 해상도를 표현)</p>\n<p>- Attributes : 속성은 선택한 그룹, 에셋, 에셋 파일의 속성을 나타냅니다. (속성 인스펙터를 선택하면 볼 수 있습니다.)</p>\n<br>\n<blockquote>\n<p>프로젝트 내의 같은 타겟에는 에셋(폴더)의 이름은 반드시 고유해야 합니다. 리소스 타입에 상관없이 이름은 고유해야 합니다.</p>\n</blockquote>\n<br>\n<p><img src=\"/media/boot_asset_2.jpg\" alt=\"boot_asset_2.jpg\"></p>\n<br>\n<p>- Asset variations : 위 그림에서 선택된 하나의 조각(에셋 파일들의 집합)을 나타냅니다. 이 조각은 같은 속성 값(value)이 적용되는 단위입니다.</p>\n<br>\n<p><img src=\"/media/boot_asset_3.jpg\" alt=\"boot_asset_3.jpg\"></p>\n<br>\n<p>에셋 카탈로그의 컨텐츠는 3가지 타입을 갖습니다.</p>\n<p>- Folders : 에셋 카탈로그 폴더는 다른 그룹 폴더나 에셋 폴더를 포함할 수 있습니다. 파일시스템의 폴더 이름은 대체적으로 확장자를 갖지 않습니다. 하지만 에셋 카탈로그 폴더는 위의 그림과 같이 해당 에셋 타입의 확장자가 자동으로 붙습니다.</p>\n<p>- JSON files : .json 확장자 파일로써 속성에 대한 정보를 포함하고 있습니다.</p>\n<p>- Content files : 콘텐츠 파일은 리소스 파일을 나타냅니다.</p>\n<br>\n<br>\n<br>\n<h3 id=\"에셋-카탈로그-타입\"><a href=\"#%EC%97%90%EC%85%8B-%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8-%ED%83%80%EC%9E%85\" aria-label=\"에셋 카탈로그 타입 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에셋 카탈로그 타입</h3>\n<p>에셋 카탈로그의 대표적인 타입과 확장자에 대해 알아봅시다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">폴더 타입</th>\n<th align=\"left\">확장자</th>\n<th align=\"left\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">App Icon Type</td>\n<td align=\"left\">.appiconset</td>\n<td align=\"left\">애플리케이션의 아이콘 입니다.</td>\n</tr>\n<tr>\n<td align=\"left\">Catalog Type</td>\n<td align=\"left\">.xcassets</td>\n<td align=\"left\">에셋 카탈로그의 최상위 폴더입니다.</td>\n</tr>\n<tr>\n<td align=\"left\">Image Set Type</td>\n<td align=\"left\">.imageset</td>\n<td align=\"left\">객체들이 사용하는 이미지입니다.</td>\n</tr>\n<tr>\n<td align=\"left\">Data Set Type</td>\n<td align=\"left\">.dataset</td>\n<td align=\"left\">애플리케이션에서 사용되는 데이터 파일입니다.</td>\n</tr>\n</tbody>\n</table>\n<br>\n<ul>\n<li>App Icon Type : 다양한 크기와 해상도의 애플리케이션 아이콘 원본 이미지입니다.</li>\n<li>Catalog Type : 에셋 카탈로그 폴더구조의 최상위 폴더입니다. 한 개의 에셋 카탈로그에 하나만 존재할 수 있습니다.</li>\n<li>Image Set Type : 이미지 에셋에서 UIImage와 NSImage의 인스턴스에 사용되는 이미지 파일입니다.</li>\n<li>Data Set Type : 장치 실행 가능 코드(device-executable code)를 제외한 Xcode에 의해 생성된 모든 종류의 데이터를 포함하는 파일들의 집합입니다.</li>\n</ul>\n<br>\n<br>\n<br>\n<h2 id=\"앱-시닝과-앱-슬라이싱\"><a href=\"#%EC%95%B1-%EC%8B%9C%EB%8B%9D%EA%B3%BC-%EC%95%B1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1\" aria-label=\"앱 시닝과 앱 슬라이싱 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앱 시닝과 앱 슬라이싱</h2>\n<ul>\n<li>\n<h4 id=\"앱-시닝app-thinning\"><a href=\"#%EC%95%B1-%EC%8B%9C%EB%8B%9Dapp-thinning\" aria-label=\"앱 시닝app thinning permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앱 시닝(app thinning)</h4>\n<p>앱 시닝이란 애플리케이션이 디바이스에 설치될 때 앱 스토어와 운영체제가 그 디바이스의 특성에 맞게 설치하도록 하는 설치 최적화 기술을 의미합니다. 이를 통해 애플리케이션의 설치용량을 최소화하고 다운로드의 속도를 향상시킬 수 있습니다. 앱 시닝(app thinning)의 기술 구성요소는 슬라이싱(slicing), 비트코드(bitcode), 주문형 리소스(on-demand resource)가 있습니다.</p>\n</li>\n</ul>\n<br>\n<blockquote>\n<p>나의 용어로 정리해보자면, 앱 시닝은 <strong>나의 디바이스에 맞게 최소한으로 가볍게(thinning) 맞춤화 설치!!</strong>  </p>\n</blockquote>\n<br>\n<ul>\n<li>\n<h4 id=\"슬라이싱slicing\"><a href=\"#%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1slicing\" aria-label=\"슬라이싱slicing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>슬라이싱(slicing)</h4>\n<p>슬라이싱(slicing)은 애플리케이션이 지원하는 다양한 디바이스에 대한 여러 조각의 애플리케이션 번들(app bundle)을 생성하고 디바이스에 알맞은 조각을 전달하는 기술입니다. 개발자가 애플리케이션의 전체 버전을 iTunes Connect에 업로드하게 되면, 앱 스토어에는 각 디바이스 특성에 다양한 버전의 조각들이 생성됩니다. 사용자가 애플리케이션을 설치할 때 전체 버전이 아닌 슬라이싱(slicing)된 조각들 중 사용자의 디바이스의 가장 적합한 조각이 다운로드되어 설치됩니다. 에셋 카탈로그에서 관리하는 이미지들은 자동으로 적용이 됩니다. (슬라이싱(slicing)은 iOS 9.0 버전 이상만 지원합니다.)</p>\n<ul>\n<li>iTunes Connect란 개발자가 앱 스토어에 판매할 애플리케이션을 제출하고 관리할 수 있도록 도와주는 웹 기반 도구입니다.  </li>\n</ul>\n</li>\n</ul>\n<br>\n<blockquote>\n<p>나의 용어로 정리해보자면, 앱 슬라이싱은 <strong>여러 디바이스에 대한 앱 번들 조각들을 슬라이싱하여 iTunes Connect에 업로드 해놓으면, 나의 디바이스에 알맞은 조각을 다운로드되어 설치!!</strong></p>\n</blockquote>\n<br>\n<br>\n<p><img src=\"/media/boot_asset_4.jpg\" alt=\"boot_asset_4.jpg\"></p>\n<br>\n<br>\n<br>\n<h2 id=\"이미지-추가하기\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"이미지 추가하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지 추가하기</h2>\n<p>실제로 사용할 이미지를 추가해 보도록 하겠습니다.</p>\n<br>\n<p><img src=\"/media/boot_asset_5.jpg\" alt=\"boot_asset_5.jpg\"></p>\n<br>\n<p>위의 방법말고도 원하는 group 폴더를 생성하거나, 원하는 이미지나 파일을 드래그 해서 쉽게 추가하는 방법도 있습니다.</p>\n<br>\n<br>\n<p>참고 링크</p>\n<p><a href=\"https://help.apple.com/xcode/mac/current/#/dev10510b1f7\">1. 애플 공식 문서 - Asset Catalogs</a></p>\n<p><a href=\"https://developer.apple.com/library/archive/documentation/Xcode/Reference/xcode_ref-Asset_Catalog_Format/AssetTypes.html\">2. 애플 공식 문서 - Types Reference</a></p>\n<p>From <a href=\"https://www.edwith.org/boostcourse-ios/\">부스트코스 - iOS</a></p>","fields":{"slug":"/posts/boostcourse-project1-assets/","tagSlugs":["/tag/i-os/","/tag/swift/","/tag/asset/"]},"frontmatter":{"date":"2019-05-29T14:00:00.169Z","description":"에셋(asset)을 이용해 프로젝트에서 사용할 이미지를 추가하는 방법","tags":["iOS","Swift","Asset"],"title":"[iOS] 프로젝트에 이미지 추가하기(Asset)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/boostcourse-project1-assets/"}}